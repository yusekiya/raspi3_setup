---
- name: Add docker group to user
  become: yes
  become_user: root
  user:
    name: '{{dev_env_user}}'
    groups: 'docker'
    append: yes
  changed_when: false
  tags:
    - docker
    - need_root

- name: Make basic directories
  file:
    path: '{{item.path}}'
    state: directory
  with_items: '{{dev_env_basic_dirs}}'
  tags:
    - basic_dirs

- name: Git clone dotfiles
  git:
    repo: '{{dev_env_dotfiles.repository}}'
    dest: '{{dev_env_dotfiles.dest}}'
  notify: Create symlink to dotfiles
  when: dev_env_dotfiles is defined
  tags:
    - dotfiles
    - git

- name: Check if miniconda has been installed
  stat: path='{{dev_env_anaconda.prefix}}'
  register: stat_anaconda_dir
  tags:
    - python

- name: Download script to install anaconda
  get_url:
    url: '{{dev_env_anaconda.src}}'
    dest: '{{dev_env_anaconda.dest}}'
  when: not stat_anaconda_dir.stat.exists
  notify: Install anaconda
  tags:
    - python

- name: Update package index file
  become: yes
  become_user: root
  apt: update_cache=yes
  tags:
    - apt
    - need_root

- name: Install packages
  become: yes
  become_user: root
  apt:
    name: '{{item.name}}'
    state: '{{item.state | default("latest")}}'
  with_items: '{{dev_env_packages}}'
  tags:
    - apt
    - need_root

- name: Make sure that directory for git repos exists
  file:
    path: '~/repos'
    state: directory
  tags:
    - git

- name: Clone git repositories
  git:
    repo: "{{item.repo}}"
    dest: "{{item.dest}}"
  with_items: "{{dev_env_git_repos}}"
  register: ret_dev_env_git_repos
  tags:
    - git

- name: Install dependencies for fzf
  become: yes
  become_user: root
  apt:
    name: '{{item}}'
    state: present
  with_items:
    - ruby2.1-dev
    - libncursesw5
    - libncursesw5-dev
    - libncurses5-dev
  tags:
    - apt
    - fzf
    - need_root

- name: Git clone fzf
  git:
    repo: "https://github.com/junegunn/fzf.git"
    dest: "~/.fzf"
  notify: Install fzf
  tags:
    - git
    - fzf

- name: Install dependencies for tmux
  become: yes
  become_user: root
  apt:
    name: '{{item}}'
    state: present
  with_items:
    - automake
    - libncurses5-dev
    - libevent-dev
  tags:
    - apt
    - tmux
    - need_root

- name: Clone tmux repo and install
  git:
    repo: "https://github.com/tmux/tmux.git"
    dest: "~/repos/tmux"
  notify: Install tmux
  tags:
    - tmux
    - git

- name: Install dependencies for tig
  become: yes
  become_user: root
  apt:
    name: '{{item}}'
    state: present
  with_items:
    - automake
    - libncurses5-dev
  tags:
    - apt
    - tig
    - need_root

- name: Clone tig repo and install
  git:
    repo: "https://github.com/jonas/tig.git"
    dest: "~/repos/tig"
  notify: Install tig
  tags:
    - tig
    - git

- name: Check if nodebrew has been installed
  stat: path='{{dev_env_nodebrew.executable_path}}'
  register: stat_nodebrew
  tags:
    - nodebrew

- name: Download nodebrew
  get_url:
    url: '{{dev_env_nodebrew.src}}'
    dest: '{{dev_env_nodebrew.dest}}'
  when: not stat_nodebrew.stat.exists
  notify: Install nodebrew
  tags:
    - nodebrew
